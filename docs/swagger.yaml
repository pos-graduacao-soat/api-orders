openapi: "3.0.2"
info:
  version: 1.0.0
  title: API Orders
  description: >
    **Service responsible for all orders**
paths:
  /orders:
    get:
      tags:
        - Orders
      summary: Get all orders
      parameters:
        - name: status
          in: query
          required: false
          description: Status of orders to filter
          schema:
            type: string
      responses:
        200:
          description: Found production orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderSchema"
                  message:
                    type: string
                    description: Success
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - Orders
      summary: Create an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: string
                  description: Customer ID
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      quantity:
                        type: integer
                        description: Quantity of the product
                      id:
                        type: string
                        description: Product ID
      responses:
        200:
          description: Create correctly
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/OrderSchema"
                  message:
                    type: string
                    description: Success
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalServerError"
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get order by id
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order id
          schema:
            type: string
      responses:
        200:
          description: Update correctly
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/OrderSchema"
                  message:
                    type: string
                    description: Success
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
    patch:
      tags:
        - Orders
      summary: Update order status
      parameters:
        - name: orderId
          in: path
          required: true
          description: Order id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: Status of the order
      responses:
        200:
          description: Update correctly
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/OrderSchema"
                  message:
                    type: string
                    description: Success
        404:
          $ref: "#/components/responses/NotFound"
        500:
          $ref: "#/components/responses/InternalServerError"
components:
  schemas:
    OrderSchema:
      type: object
      description: Full properties of a production order.
      properties:
        id:
          type: string
          description: Production Order id.
        status:
          type: string
          description: Production Order status.
          enum:
          - WAITING_PAYMENT
          - PAYMENT_PROBLEM
          - SUCCESSFUL_PAYMENT
          - RECEIVED
          - PREPARING
          - READY
          - DONE
        totalPrice:
          type: string
          description: Production Order total price.
        products:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Product ID.
              name:
                type: string
                description: Product name.
              quantity:
                type: integer
                description: Quantity of the product.
              price:
                type: integer
                description: Price of the product.
              category:
                type: string
                description: Category of the product.
              description:
                type: integer
                description: Description of the product.
              image:
                type: integer
                description: Image of the product.
  responses:
    BadRequest:
      description: Invalid Request
      content:
        "application/json":
          schema:
            properties:
              data:
                type: object
                properties:
                  stack:
                    type: string
              message:
                type: string
                title: Error message
                description: Describes a message informing a reason for the error
                example: "Email required"
    NotFound:
      description: Entity not found
      content:
        "application/json":
          schema:
            properties:
              data:
                type: object
                properties:
                  stack:
                    type: string
              message:
                type: string
                title: Error message
                description: Entity not found
                example: "Not Found"
    InternalServerError:
      description: Internal server error
      content:
        "application/json":
          schema:
            properties:
              data:
                type: object
                properties:
                  stack:
                    type: string
              message:
                type: string
                title: Error message
                description: Describes a message informing a reason for the error
                example: "Internal Server Error"
